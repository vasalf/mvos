#ifndef KEYBOARD_H
#define KEYBOARD_H

#include <stdint.h>
#include <isr.h>
#include <stdbool.h>

extern uint16_t keyboard_port;

void init_keyboard(void);
void keyboard_irq(void);

typedef struct
{
    bool caps_lock;
    bool num_lock;
    bool scroll_lock;
} keyboard_locks_t;

extern keyboard_locks_t keyboard_locks;

extern bool* kbd_currently_pressed;

#define KBD_SCANCODE_QUAN 102

enum kbd_scancode
{
    KBD_SCANCODE_ESC = 0,
    KBD_SCANCODE_F1 = 1,
    KBD_SCANCODE_F2 = 2,
    KBD_SCANCODE_F3 = 3,
    KBD_SCANCODE_F4 = 4,
    KBD_SCANCODE_F5 = 5,
    KBD_SCANCODE_F6 = 6,
    KBD_SCANCODE_F7 = 7,
    KBD_SCANCODE_F8 = 8,
    KBD_SCANCODE_F9 = 9,
    KBD_SCANCODE_F10 = 10,
    KBD_SCANCODE_F11 = 11,
    KBD_SCANCODE_F12 = 12,

    KBD_SCANCODE_TILDE = 13,
    KBD_SCANCODE_1 = 14,
    KBD_SCANCODE_2 = 15,
    KBD_SCANCODE_3 = 16,
    KBD_SCANCODE_4 = 17,
    KBD_SCANCODE_5 = 18,
    KBD_SCANCODE_6 = 19,
    KBD_SCANCODE_7 = 20,
    KBD_SCANCODE_8 = 21,
    KBD_SCANCODE_9 = 22,
    KBD_SCANCODE_0 = 23,
    KBD_SCANCODE_MINUS = 24,
    KBD_SCANCODE_EQUAL = 25,
    KBD_SCANCODE_BACKSPACE = 26,

    KBD_SCANCODE_TAB = 27,
    KBD_SCANCODE_Q = 28,
    KBD_SCANCODE_W = 29,
    KBD_SCANCODE_E = 30,
    KBD_SCANCODE_R = 31,
    KBD_SCANCODE_T = 32,
    KBD_SCANCODE_Y = 33,
    KBD_SCANCODE_U = 34,
    KBD_SCANCODE_I = 35,
    KBD_SCANCODE_O = 36,
    KBD_SCANCODE_P = 37,
    KBD_SCANCODE_SQUARE_BRACKET_OPEN = 38,
    KBD_SCANCODE_SQUARE_BRACKET_CLOSE = 39,
    KBD_SCANCODE_BACKSLASH = 40,

    KBD_SCANCODE_CAPSLOCK = 41,
    KBD_SCANCODE_A = 42,
    KBD_SCANCODE_S = 43,
    KBD_SCANCODE_D = 44,
    KBD_SCANCODE_F = 45,
    KBD_SCANCODE_G = 46,
    KBD_SCANCODE_H = 47,
    KBD_SCANCODE_J = 48,
    KBD_SCANCODE_K = 49,
    KBD_SCANCODE_L = 50,
    KBD_SCANCODE_SEMICOLON = 51,
    KBD_SCANCODE_APOSTROPHE = 52,
    KBD_SCANCODE_ENTER = 53,

    KBD_SCANCODE_LSHIFT = 54,
    KBD_SCANCODE_Z = 55,
    KBD_SCANCODE_X = 56,
    KBD_SCANCODE_C = 57,
    KBD_SCANCODE_V = 58,
    KBD_SCANCODE_B = 59,
    KBD_SCANCODE_N = 60,
    KBD_SCANCODE_M = 61,
    KBD_SCANCODE_COMMA = 62,
    KBD_SCANCODE_DOT = 63,
    KBD_SCANCODE_SLASH = 64,
    KBD_SCANCODE_RSHIFT = 65,

    KBD_SCANCODE_FN = 66,
    KBD_SCANCODE_LCTRL = 67,
    KBD_SCANCODE_META = 68,
    KBD_SCANCODE_LALT = 69,
    KBD_SCANCODE_SPACE = 70,
    KBD_SCANCODE_RALT = 71,
    KBD_SCANCODE_PRTSC = 72,
    KBD_SCANCODE_RCTRL = 73,

    KBD_SCANCODE_HOME = 74,
    KBD_SCANCODE_END = 75,
    KBD_SCANCODE_INS = 76,
    KBD_SCANCODE_DEL = 77,
    KBD_SCANCODE_PGUP = 78,
    KBD_SCANCODE_PGDN = 79,

    KBD_SCANCODE_LEFT = 80,
    KBD_SCANCODE_RIGHT = 81,
    KBD_SCANCODE_UP = 82,
    KBD_SCANCODE_DOWN = 83,
    KBD_SCANCODE_NUMLOCK = 84,
    KBD_SCANCODE_KEYPAD_SLASH = 85,
    KBD_SCANCODE_KEYPAD_WILDCARD = 86,
    KBD_SCANCODE_KEYPAD_MINUS = 87,
    KBD_SCANCODE_KEYPAD_7 = 88,
    KBD_SCANCODE_KEYPAD_8 = 89,
    KBD_SCANCODE_KEYPAD_9 = 90,
    KBD_SCANCODE_KEYPAD_4 = 91,
    KBD_SCANCODE_KEYPAD_5 = 92,
    KBD_SCANCODE_KEYPAD_6 = 93,
    KBD_SCANCODE_KEYPAD_PLUS = 94,
    KBD_SCANCODE_KEYPAD_1 = 95,
    KBD_SCANCODE_KEYPAD_2 = 96,
    KBD_SCANCODE_KEYPAD_3 = 97,
    KBD_SCANCODE_KEYPAD_0 = 98,
    KBD_SCANCODE_KEYPAD_DOT = 99,
    KBD_SCANCODE_KEYPAD_ENTER = 100,
    KBD_SCANCODE_SCRLOCK = 101
};

#endif
